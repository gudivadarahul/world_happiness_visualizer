{"ast":null,"code":"var _jsxFileName = \"/Users/rahulgudivada/workspace/happiness-index/frontend/src/HappinessChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HappinessChart = ({\n  data\n}) => {\n  _s();\n  const [sortCriteria, setSortCriteria] = useState(\"score\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const chartRef = useRef();\n  const observerRef = useRef(null);\n  const handleSortChange = event => {\n    setSortCriteria(event.target.value);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n  const filteredData = data.filter(d => d[\"Country or region\"].toLowerCase().includes(searchTerm)).sort((a, b) => {\n    if (sortCriteria === \"alphabetical\") {\n      return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);\n    } else if (sortCriteria === \"score\") {\n      return b[\"Score\"] - a[\"Score\"];\n    }\n    return 0;\n  });\n  useEffect(() => {\n    if (filteredData.length === 0) return;\n\n    // Clear any previous SVG elements\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n\n    // Set up the SVG element and its dimensions\n    const svg = d3.select(chartRef.current).attr(\"width\", window.innerWidth).attr(\"height\", filteredData.length * 50 + 150) // Extra space for legend\n    .style(\"overflow\", \"visible\");\n\n    // Set up the scales\n    const xScale = d3.scaleLinear().domain([0, d3.max(filteredData, d => +d[\"Score\"])]).range([0, window.innerWidth - 200]);\n\n    // Set up the color scale\n    const colorScale = d3.scaleSequential().domain([d3.min(filteredData, d => +d[\"Score\"]), d3.max(filteredData, d => +d[\"Score\"])]).interpolator(d3.interpolateRgbBasis([\"#8b0000\",\n    // dark red\n    \"#ff4500\",\n    // orange-red\n    \"#ffd700\",\n    // yellow-orange\n    \"#ffff00\",\n    // yellow\n    \"#9acd32\",\n    // yellow-green\n    \"#00ff00\" // green\n    ]));\n\n    // Create a custom tooltip\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\");\n\n    // Create the bars with tooltips and smooth scrolling\n    const bars = svg.selectAll(\".bar\").data(filteredData, d => d[\"Country or region\"]) // Use key function to track data\n    .join(enter => enter.append(\"rect\").attr(\"class\", \"bar\").attr(\"y\", (d, i) => i * 50 + 50).attr(\"height\", 40).attr(\"fill\", d => colorScale(d[\"Score\"])).attr(\"id\", d => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).attr(\"width\", 0), update => update.attr(\"y\", (d, i) => i * 50 + 50).attr(\"fill\", d => colorScale(d[\"Score\"])), exit => exit.transition().duration(500).attr(\"width\", 0).remove());\n    const labels = svg.selectAll(\".label\").data(filteredData, d => d[\"Country or region\"]) // Use key function to track data\n    .join(enter => enter.append(\"text\").attr(\"class\", \"label\").attr(\"y\", (d, i) => i * 50 + 75).attr(\"x\", 10).text(d => d[\"Country or region\"]).attr(\"font-size\", \"12px\").attr(\"fill\", \"black\").attr(\"id\", d => `label-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).attr(\"opacity\", 0), update => update.attr(\"y\", (d, i) => i * 50 + 75).attr(\"opacity\", 1), exit => exit.transition().duration(500).attr(\"opacity\", 0).remove());\n\n    // Add score text to the right end of each bar\n    const scores = svg.selectAll(\".score\").data(filteredData).enter().append(\"text\").attr(\"class\", \"score\").attr(\"x\", d => xScale(d[\"Score\"]) - 35) // Position inside the bar, adjust as needed\n    .attr(\"y\", (d, i) => i * 50 + 75) // Align with the bars\n    .text(d => d[\"Score\"]).attr(\"font-size\", \"12px\").attr(\"fill\", \"black\").attr(\"opacity\", 0).transition().duration(1000).attr(\"opacity\", 1);\n\n    // Create Intersection Observer\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const bar = d3.select(entry.target);\n          bar.transition().duration(1000).attr(\"width\", d => xScale(d[\"Score\"]));\n          entry.target.style.opacity = 1;\n          observer.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.1\n    });\n    bars.each(function () {\n      observer.observe(this);\n    });\n    labels.each(function () {\n      observer.observe(this);\n    });\n    scores.each(function () {\n      observer.observe(this);\n    });\n    bars.on(\"mouseover\", function (event, d) {\n      tooltip.transition().duration(200).style(\"opacity\", 0.9);\n      tooltip.html(`<strong>Country:</strong> <span style='color:red'>${d[\"Country or region\"]}</span><br>\n            <strong>Score:</strong> <span style='color:red'>${d[\"Score\"]}</span><br>`).style(\"left\", event.pageX + 10 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", function () {\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    }).on(\"click\", function (event, d) {\n      document.getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n    labels.on(\"click\", function (event, d) {\n      document.getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n\n    // Add a legend\n    const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(20, 10)`);\n    const legendData = [{\n      color: \"#00ff00\",\n      text: \"High Happiness\"\n    }, {\n      color: \"#ffff00\",\n      text: \"Medium Happiness\"\n    }, {\n      color: \"red\",\n      text: \"Low Happiness\"\n    }];\n    legend.selectAll(\"rect\").data(legendData).enter().append(\"rect\").attr(\"x\", (d, i) => i * 130).attr(\"width\", 20).attr(\"height\", 20).attr(\"fill\", d => d.color);\n    legend.selectAll(\"text\").data(legendData).enter().append(\"text\").attr(\"x\", (d, i) => i * 130 + 25).attr(\"y\", 15).text(d => d.text).attr(\"font-size\", \"12px\").attr(\"fill\", \"black\");\n\n    // Cleanup on unmount\n    return () => {\n      observer.disconnect();\n      tooltip.remove();\n    };\n  }, [filteredData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sort\",\n        children: \"Sort by: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"sort\",\n        onChange: handleSortChange,\n        value: sortCriteria,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"score\",\n          children: \"Happiness Score\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"alphabetical\",\n          children: \"Alphabetical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"search\",\n        children: \"Search: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"search\",\n        type: \"text\",\n        placeholder: \"Search country\",\n        onChange: handleSearchChange,\n        value: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n};\n_s(HappinessChart, \"yyUtsTBWRJ/H7bN0UcuLi+Xwm94=\");\n_c = HappinessChart;\nexport default HappinessChart;\nvar _c;\n$RefreshReg$(_c, \"HappinessChart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","jsxDEV","_jsxDEV","HappinessChart","data","_s","sortCriteria","setSortCriteria","searchTerm","setSearchTerm","chartRef","observerRef","handleSortChange","event","target","value","handleSearchChange","toLowerCase","filteredData","filter","d","includes","sort","a","b","localeCompare","length","select","current","selectAll","remove","svg","attr","window","innerWidth","style","xScale","scaleLinear","domain","max","range","colorScale","scaleSequential","min","interpolator","interpolateRgbBasis","tooltip","append","bars","join","enter","i","replace","update","exit","transition","duration","labels","text","scores","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","bar","opacity","unobserve","threshold","each","observe","on","html","pageX","pageY","document","getElementById","scrollIntoView","behavior","legend","legendData","color","disconnect","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","type","placeholder","ref","_c","$RefreshReg$"],"sources":["/Users/rahulgudivada/workspace/happiness-index/frontend/src/HappinessChart.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst HappinessChart = ({ data }) => {\n  const [sortCriteria, setSortCriteria] = useState(\"score\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const chartRef = useRef();\n  const observerRef = useRef(null);\n\n  const handleSortChange = (event) => {\n    setSortCriteria(event.target.value);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n\n  const filteredData = data\n    .filter((d) => d[\"Country or region\"].toLowerCase().includes(searchTerm))\n    .sort((a, b) => {\n      if (sortCriteria === \"alphabetical\") {\n        return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);\n      } else if (sortCriteria === \"score\") {\n        return b[\"Score\"] - a[\"Score\"];\n      }\n      return 0;\n    });\n\n  useEffect(() => {\n    if (filteredData.length === 0) return;\n\n    // Clear any previous SVG elements\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n\n    // Set up the SVG element and its dimensions\n    const svg = d3\n      .select(chartRef.current)\n      .attr(\"width\", window.innerWidth)\n      .attr(\"height\", filteredData.length * 50 + 150) // Extra space for legend\n      .style(\"overflow\", \"visible\");\n\n    // Set up the scales\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(filteredData, (d) => +d[\"Score\"])])\n      .range([0, window.innerWidth - 200]);\n\n    // Set up the color scale\n    const colorScale = d3\n      .scaleSequential()\n      .domain([\n        d3.min(filteredData, (d) => +d[\"Score\"]),\n        d3.max(filteredData, (d) => +d[\"Score\"]),\n      ])\n      .interpolator(\n        d3.interpolateRgbBasis([\n          \"#8b0000\", // dark red\n          \"#ff4500\", // orange-red\n          \"#ffd700\", // yellow-orange\n          \"#ffff00\", // yellow\n          \"#9acd32\", // yellow-green\n          \"#00ff00\", // green\n        ])\n      );\n\n    // Create a custom tooltip\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\");\n\n    // Create the bars with tooltips and smooth scrolling\n    const bars = svg\n      .selectAll(\".bar\")\n      .data(filteredData, (d) => d[\"Country or region\"]) // Use key function to track data\n      .join(\n        (enter) =>\n          enter\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"y\", (d, i) => i * 50 + 50)\n            .attr(\"height\", 40)\n            .attr(\"fill\", (d) => colorScale(d[\"Score\"]))\n            .attr(\n              \"id\",\n              (d) => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`\n            )\n            .attr(\"width\", 0),\n        (update) =>\n          update\n            .attr(\"y\", (d, i) => i * 50 + 50)\n            .attr(\"fill\", (d) => colorScale(d[\"Score\"])),\n        (exit) => exit.transition().duration(500).attr(\"width\", 0).remove()\n      );\n\n    const labels = svg\n      .selectAll(\".label\")\n      .data(filteredData, (d) => d[\"Country or region\"]) // Use key function to track data\n      .join(\n        (enter) =>\n          enter\n            .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"y\", (d, i) => i * 50 + 75)\n            .attr(\"x\", 10)\n            .text((d) => d[\"Country or region\"])\n            .attr(\"font-size\", \"12px\")\n            .attr(\"fill\", \"black\")\n            .attr(\n              \"id\",\n              (d) => `label-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`\n            )\n            .attr(\"opacity\", 0),\n        (update) => update.attr(\"y\", (d, i) => i * 50 + 75).attr(\"opacity\", 1),\n        (exit) => exit.transition().duration(500).attr(\"opacity\", 0).remove()\n      );\n\n    // Add score text to the right end of each bar\n    const scores = svg\n      .selectAll(\".score\")\n      .data(filteredData)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"score\")\n      .attr(\"x\", (d) => xScale(d[\"Score\"]) - 35) // Position inside the bar, adjust as needed\n      .attr(\"y\", (d, i) => i * 50 + 75) // Align with the bars\n      .text((d) => d[\"Score\"])\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"black\")\n      .attr(\"opacity\", 0)\n      .transition()\n      .duration(1000)\n      .attr(\"opacity\", 1);\n\n    // Create Intersection Observer\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const bar = d3.select(entry.target);\n            bar\n              .transition()\n              .duration(1000)\n              .attr(\"width\", (d) => xScale(d[\"Score\"]));\n            entry.target.style.opacity = 1;\n            observer.unobserve(entry.target);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    bars.each(function () {\n      observer.observe(this);\n    });\n    labels.each(function () {\n      observer.observe(this);\n    });\n    scores.each(function () {\n      observer.observe(this);\n    });\n    bars\n      .on(\"mouseover\", function (event, d) {\n        tooltip.transition().duration(200).style(\"opacity\", 0.9);\n        tooltip\n          .html(\n            `<strong>Country:</strong> <span style='color:red'>${d[\"Country or region\"]}</span><br>\n            <strong>Score:</strong> <span style='color:red'>${d[\"Score\"]}</span><br>`\n          )\n          .style(\"left\", event.pageX + 10 + \"px\")\n          .style(\"top\", event.pageY - 28 + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        tooltip.transition().duration(500).style(\"opacity\", 0);\n      })\n      .on(\"click\", function (event, d) {\n        document\n          .getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n          .scrollIntoView({ behavior: \"smooth\" });\n      });\n\n    labels.on(\"click\", function (event, d) {\n      document\n        .getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n        .scrollIntoView({ behavior: \"smooth\" });\n    });\n\n    // Add a legend\n    const legend = svg\n      .append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\"transform\", `translate(20, 10)`);\n\n    const legendData = [\n      { color: \"#00ff00\", text: \"High Happiness\" },\n      { color: \"#ffff00\", text: \"Medium Happiness\" },\n      { color: \"red\", text: \"Low Happiness\" },\n    ];\n\n    legend\n      .selectAll(\"rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"x\", (d, i) => i * 130)\n      .attr(\"width\", 20)\n      .attr(\"height\", 20)\n      .attr(\"fill\", (d) => d.color);\n\n    legend\n      .selectAll(\"text\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .attr(\"x\", (d, i) => i * 130 + 25)\n      .attr(\"y\", 15)\n      .text((d) => d.text)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"black\");\n\n    // Cleanup on unmount\n    return () => {\n      observer.disconnect();\n      tooltip.remove();\n    };\n  }, [filteredData]);\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"sort\">Sort by: </label>\n        <select id=\"sort\" onChange={handleSortChange} value={sortCriteria}>\n          <option value=\"score\">Happiness Score</option>\n          <option value=\"alphabetical\">Alphabetical</option>\n        </select>\n\n        <label htmlFor=\"search\">Search: </label>\n        <input\n          id=\"search\"\n          type=\"text\"\n          placeholder=\"Search country\"\n          onChange={handleSearchChange}\n          value={searchTerm}\n        />\n      </div>\n      <svg ref={chartRef}></svg>\n    </div>\n  );\n};\n\nexport default HappinessChart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,KAAKC,EAAE,MAAM,IAAI;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACnC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,OAAO,CAAC;EACzD,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMa,QAAQ,GAAGZ,MAAM,CAAC,CAAC;EACzB,MAAMa,WAAW,GAAGb,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAClCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,kBAAkB,GAAIH,KAAK,IAAK;IACpCJ,aAAa,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAACE,WAAW,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,MAAMC,YAAY,GAAGd,IAAI,CACtBe,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAAC,mBAAmB,CAAC,CAACH,WAAW,CAAC,CAAC,CAACI,QAAQ,CAACb,UAAU,CAAC,CAAC,CACxEc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;IACd,IAAIlB,YAAY,KAAK,cAAc,EAAE;MACnC,OAAOiB,CAAC,CAAC,mBAAmB,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,mBAAmB,CAAC,CAAC;IACrE,CAAC,MAAM,IAAIlB,YAAY,KAAK,OAAO,EAAE;MACnC,OAAOkB,CAAC,CAAC,OAAO,CAAC,GAAGD,CAAC,CAAC,OAAO,CAAC;IAChC;IACA,OAAO,CAAC;EACV,CAAC,CAAC;EAEJxB,SAAS,CAAC,MAAM;IACd,IAAImB,YAAY,CAACQ,MAAM,KAAK,CAAC,EAAE;;IAE/B;IACA1B,EAAE,CAAC2B,MAAM,CAACjB,QAAQ,CAACkB,OAAO,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAEnD;IACA,MAAMC,GAAG,GAAG/B,EAAE,CACX2B,MAAM,CAACjB,QAAQ,CAACkB,OAAO,CAAC,CACxBI,IAAI,CAAC,OAAO,EAAEC,MAAM,CAACC,UAAU,CAAC,CAChCF,IAAI,CAAC,QAAQ,EAAEd,YAAY,CAACQ,MAAM,GAAG,EAAE,GAAG,GAAG,CAAC,CAAC;IAAA,CAC/CS,KAAK,CAAC,UAAU,EAAE,SAAS,CAAC;;IAE/B;IACA,MAAMC,MAAM,GAAGpC,EAAE,CACdqC,WAAW,CAAC,CAAC,CACbC,MAAM,CAAC,CAAC,CAAC,EAAEtC,EAAE,CAACuC,GAAG,CAACrB,YAAY,EAAGE,CAAC,IAAK,CAACA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrDoB,KAAK,CAAC,CAAC,CAAC,EAAEP,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC,CAAC;;IAEtC;IACA,MAAMO,UAAU,GAAGzC,EAAE,CAClB0C,eAAe,CAAC,CAAC,CACjBJ,MAAM,CAAC,CACNtC,EAAE,CAAC2C,GAAG,CAACzB,YAAY,EAAGE,CAAC,IAAK,CAACA,CAAC,CAAC,OAAO,CAAC,CAAC,EACxCpB,EAAE,CAACuC,GAAG,CAACrB,YAAY,EAAGE,CAAC,IAAK,CAACA,CAAC,CAAC,OAAO,CAAC,CAAC,CACzC,CAAC,CACDwB,YAAY,CACX5C,EAAE,CAAC6C,mBAAmB,CAAC,CACrB,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS,CAAE;IAAA,CACZ,CACH,CAAC;;IAEH;IACA,MAAMC,OAAO,GAAG9C,EAAE,CAAC2B,MAAM,CAAC,MAAM,CAAC,CAACoB,MAAM,CAAC,KAAK,CAAC,CAACf,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC;;IAExE;IACA,MAAMgB,IAAI,GAAGjB,GAAG,CACbF,SAAS,CAAC,MAAM,CAAC,CACjBzB,IAAI,CAACc,YAAY,EAAGE,CAAC,IAAKA,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAAA,CAClD6B,IAAI,CACFC,KAAK,IACJA,KAAK,CACFH,MAAM,CAAC,MAAM,CAAC,CACdf,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CACpBA,IAAI,CAAC,GAAG,EAAE,CAACZ,CAAC,EAAE+B,CAAC,KAAKA,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAChCnB,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAGZ,CAAC,IAAKqB,UAAU,CAACrB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAC3CY,IAAI,CACH,IAAI,EACHZ,CAAC,IAAK,OAAOA,CAAC,CAAC,mBAAmB,CAAC,CAACgC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAC3D,CAAC,CACApB,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,EACpBqB,MAAM,IACLA,MAAM,CACHrB,IAAI,CAAC,GAAG,EAAE,CAACZ,CAAC,EAAE+B,CAAC,KAAKA,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAChCnB,IAAI,CAAC,MAAM,EAAGZ,CAAC,IAAKqB,UAAU,CAACrB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAC/CkC,IAAI,IAAKA,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACxB,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAACF,MAAM,CAAC,CACpE,CAAC;IAEH,MAAM2B,MAAM,GAAG1B,GAAG,CACfF,SAAS,CAAC,QAAQ,CAAC,CACnBzB,IAAI,CAACc,YAAY,EAAGE,CAAC,IAAKA,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC;IAAA,CAClD6B,IAAI,CACFC,KAAK,IACJA,KAAK,CACFH,MAAM,CAAC,MAAM,CAAC,CACdf,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CACtBA,IAAI,CAAC,GAAG,EAAE,CAACZ,CAAC,EAAE+B,CAAC,KAAKA,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAChCnB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACb0B,IAAI,CAAEtC,CAAC,IAAKA,CAAC,CAAC,mBAAmB,CAAC,CAAC,CACnCY,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CACrBA,IAAI,CACH,IAAI,EACHZ,CAAC,IAAK,SAASA,CAAC,CAAC,mBAAmB,CAAC,CAACgC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAC7D,CAAC,CACApB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EACtBqB,MAAM,IAAKA,MAAM,CAACrB,IAAI,CAAC,GAAG,EAAE,CAACZ,CAAC,EAAE+B,CAAC,KAAKA,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAACnB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,EACrEsB,IAAI,IAAKA,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACxB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAACF,MAAM,CAAC,CACtE,CAAC;;IAEH;IACA,MAAM6B,MAAM,GAAG5B,GAAG,CACfF,SAAS,CAAC,QAAQ,CAAC,CACnBzB,IAAI,CAACc,YAAY,CAAC,CAClBgC,KAAK,CAAC,CAAC,CACPH,MAAM,CAAC,MAAM,CAAC,CACdf,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CACtBA,IAAI,CAAC,GAAG,EAAGZ,CAAC,IAAKgB,MAAM,CAAChB,CAAC,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC;IAAA,CAC1CY,IAAI,CAAC,GAAG,EAAE,CAACZ,CAAC,EAAE+B,CAAC,KAAKA,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IAAA,CACjCO,IAAI,CAAEtC,CAAC,IAAKA,CAAC,CAAC,OAAO,CAAC,CAAC,CACvBY,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAClBuB,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACdxB,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;;IAErB;IACA,MAAM4B,QAAQ,GAAG,IAAIC,oBAAoB,CACtCC,OAAO,IAAK;MACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,IAAK;QACzB,IAAIA,KAAK,CAACC,cAAc,EAAE;UACxB,MAAMC,GAAG,GAAGlE,EAAE,CAAC2B,MAAM,CAACqC,KAAK,CAAClD,MAAM,CAAC;UACnCoD,GAAG,CACAX,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACdxB,IAAI,CAAC,OAAO,EAAGZ,CAAC,IAAKgB,MAAM,CAAChB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;UAC3C4C,KAAK,CAAClD,MAAM,CAACqB,KAAK,CAACgC,OAAO,GAAG,CAAC;UAC9BP,QAAQ,CAACQ,SAAS,CAACJ,KAAK,CAAClD,MAAM,CAAC;QAClC;MACF,CAAC,CAAC;IACJ,CAAC,EACD;MAAEuD,SAAS,EAAE;IAAI,CACnB,CAAC;IAEDrB,IAAI,CAACsB,IAAI,CAAC,YAAY;MACpBV,QAAQ,CAACW,OAAO,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC;IACFd,MAAM,CAACa,IAAI,CAAC,YAAY;MACtBV,QAAQ,CAACW,OAAO,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC;IACFZ,MAAM,CAACW,IAAI,CAAC,YAAY;MACtBV,QAAQ,CAACW,OAAO,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC;IACFvB,IAAI,CACDwB,EAAE,CAAC,WAAW,EAAE,UAAU3D,KAAK,EAAEO,CAAC,EAAE;MACnC0B,OAAO,CAACS,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACrB,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC;MACxDW,OAAO,CACJ2B,IAAI,CACH,qDAAqDrD,CAAC,CAAC,mBAAmB,CAAC;AACvF,8DAA8DA,CAAC,CAAC,OAAO,CAAC,aAC9D,CAAC,CACAe,KAAK,CAAC,MAAM,EAAEtB,KAAK,CAAC6D,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC,CACtCvC,KAAK,CAAC,KAAK,EAAEtB,KAAK,CAAC8D,KAAK,GAAG,EAAE,GAAG,IAAI,CAAC;IAC1C,CAAC,CAAC,CACDH,EAAE,CAAC,UAAU,EAAE,YAAY;MAC1B1B,OAAO,CAACS,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACrB,KAAK,CAAC,SAAS,EAAE,CAAC,CAAC;IACxD,CAAC,CAAC,CACDqC,EAAE,CAAC,OAAO,EAAE,UAAU3D,KAAK,EAAEO,CAAC,EAAE;MAC/BwD,QAAQ,CACLC,cAAc,CAAC,OAAOzD,CAAC,CAAC,mBAAmB,CAAC,CAACgC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CACpE0B,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC3C,CAAC,CAAC;IAEJtB,MAAM,CAACe,EAAE,CAAC,OAAO,EAAE,UAAU3D,KAAK,EAAEO,CAAC,EAAE;MACrCwD,QAAQ,CACLC,cAAc,CAAC,OAAOzD,CAAC,CAAC,mBAAmB,CAAC,CAACgC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,CAAC,CACpE0B,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC3C,CAAC,CAAC;;IAEF;IACA,MAAMC,MAAM,GAAGjD,GAAG,CACfgB,MAAM,CAAC,GAAG,CAAC,CACXf,IAAI,CAAC,OAAO,EAAE,QAAQ,CAAC,CACvBA,IAAI,CAAC,WAAW,EAAE,mBAAmB,CAAC;IAEzC,MAAMiD,UAAU,GAAG,CACjB;MAAEC,KAAK,EAAE,SAAS;MAAExB,IAAI,EAAE;IAAiB,CAAC,EAC5C;MAAEwB,KAAK,EAAE,SAAS;MAAExB,IAAI,EAAE;IAAmB,CAAC,EAC9C;MAAEwB,KAAK,EAAE,KAAK;MAAExB,IAAI,EAAE;IAAgB,CAAC,CACxC;IAEDsB,MAAM,CACHnD,SAAS,CAAC,MAAM,CAAC,CACjBzB,IAAI,CAAC6E,UAAU,CAAC,CAChB/B,KAAK,CAAC,CAAC,CACPH,MAAM,CAAC,MAAM,CAAC,CACdf,IAAI,CAAC,GAAG,EAAE,CAACZ,CAAC,EAAE+B,CAAC,KAAKA,CAAC,GAAG,GAAG,CAAC,CAC5BnB,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,EAAGZ,CAAC,IAAKA,CAAC,CAAC8D,KAAK,CAAC;IAE/BF,MAAM,CACHnD,SAAS,CAAC,MAAM,CAAC,CACjBzB,IAAI,CAAC6E,UAAU,CAAC,CAChB/B,KAAK,CAAC,CAAC,CACPH,MAAM,CAAC,MAAM,CAAC,CACdf,IAAI,CAAC,GAAG,EAAE,CAACZ,CAAC,EAAE+B,CAAC,KAAKA,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CACjCnB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACb0B,IAAI,CAAEtC,CAAC,IAAKA,CAAC,CAACsC,IAAI,CAAC,CACnB1B,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC;;IAExB;IACA,OAAO,MAAM;MACX4B,QAAQ,CAACuB,UAAU,CAAC,CAAC;MACrBrC,OAAO,CAAChB,MAAM,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,CAACZ,YAAY,CAAC,CAAC;EAElB,oBACEhB,OAAA;IAAAkF,QAAA,gBACElF,OAAA;MAAAkF,QAAA,gBACElF,OAAA;QAAOmF,OAAO,EAAC,MAAM;QAAAD,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACvCvF,OAAA;QAAQwF,EAAE,EAAC,MAAM;QAACC,QAAQ,EAAE/E,gBAAiB;QAACG,KAAK,EAAET,YAAa;QAAA8E,QAAA,gBAChElF,OAAA;UAAQa,KAAK,EAAC,OAAO;UAAAqE,QAAA,EAAC;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9CvF,OAAA;UAAQa,KAAK,EAAC,cAAc;UAAAqE,QAAA,EAAC;QAAY;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC,eAETvF,OAAA;QAAOmF,OAAO,EAAC,QAAQ;QAAAD,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxCvF,OAAA;QACEwF,EAAE,EAAC,QAAQ;QACXE,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,gBAAgB;QAC5BF,QAAQ,EAAE3E,kBAAmB;QAC7BD,KAAK,EAAEP;MAAW;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNvF,OAAA;MAAK4F,GAAG,EAAEpF;IAAS;MAAA4E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEV,CAAC;AAACpF,EAAA,CAlPIF,cAAc;AAAA4F,EAAA,GAAd5F,cAAc;AAoPpB,eAAeA,cAAc;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}