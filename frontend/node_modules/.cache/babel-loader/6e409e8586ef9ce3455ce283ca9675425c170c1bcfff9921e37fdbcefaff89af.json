{"ast":null,"code":"var _jsxFileName = \"/Users/rahulgudivada/workspace/happiness-index/frontend/src/HappinessChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HappinessChart = ({\n  data\n}) => {\n  _s();\n  const [sortCriteria, setSortCriteria] = useState(\"score\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedFactor, setSelectedFactor] = useState(\"\");\n  const [factorRange, setFactorRange] = useState([0, 10]);\n  const chartRef = useRef();\n  const observerRef = useRef(null);\n  const handleSortChange = event => {\n    setSortCriteria(event.target.value);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n  const handleFactorChange = event => {\n    setSelectedFactor(event.target.value);\n  };\n  const handleRangeChange = event => {\n    const [min, max] = event.target.value.split(\",\").map(Number);\n    setFactorRange([min, max]);\n  };\n  const filteredData = data.filter(d => d[\"Country or region\"].toLowerCase().includes(searchTerm)).filter(d => {\n    if (selectedFactor) {\n      const factorValue = d[selectedFactor];\n      return factorValue >= factorRange[0] && factorValue <= factorRange[1];\n    }\n    return true;\n  }).sort((a, b) => {\n    if (sortCriteria === \"alphabetical\") {\n      return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);\n    } else if (sortCriteria === \"score\") {\n      return b[\"Score\"] - a[\"Score\"];\n    }\n    return 0;\n  });\n  useEffect(() => {\n    if (filteredData.length === 0) return;\n\n    // Clear any previous SVG elements\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n\n    // Set up the SVG element and its dimensions\n    const svg = d3.select(chartRef.current).attr(\"width\", window.innerWidth).attr(\"height\", filteredData.length * 50 + 150) // Extra space for legend\n    .style(\"overflow\", \"visible\");\n\n    // Add a legend at the top\n    const legend = svg.append(\"g\").attr(\"class\", \"legend\").attr(\"transform\", `translate(${(window.innerWidth - 200) / 2 - 150}, 10)`);\n    const legendData = [{\n      color: \"#00ff00\",\n      text: \"High Happiness\"\n    }, {\n      color: \"#ffff00\",\n      text: \"Medium Happiness\"\n    }, {\n      color: \"red\",\n      text: \"Low Happiness\"\n    }];\n    const legendSpacing = 20; // Adjust this value as needed\n\n    const legendText = legend.selectAll(\"text\").data(legendData).enter().append(\"text\").text(d => d.text).attr(\"font-size\", \"12px\").attr(\"fill\", \"black\");\n    const legendRects = legend.selectAll(\"rect\").data(legendData).enter().append(\"rect\").attr(\"width\", 20).attr(\"height\", 20).attr(\"fill\", d => d.color);\n    let previousX = 0;\n    legendText.each(function (d, i) {\n      const currentText = d3.select(this);\n      const textWidth = currentText.node().getBBox().width;\n      currentText.attr(\"transform\", `translate(${previousX + 30}, 15)`);\n      const currentRect = legendRects.filter((_, j) => j === i);\n      currentRect.attr(\"transform\", `translate(${previousX}, 0)`);\n      previousX += textWidth + 30 + legendSpacing;\n    });\n\n    // Center the legend horizontally\n    const legendWidth = previousX - legendSpacing;\n    legend.attr(\"transform\", `translate(${(window.innerWidth - 200 - legendWidth) / 2}, 10)`);\n\n    // Set up the scales\n    const xScale = d3.scaleLinear().domain([0, d3.max(filteredData, d => +d[\"Score\"])]).range([0, window.innerWidth - 200]);\n\n    // Set up the color scale\n    const colorScale = d3.scaleSequential().domain([d3.min(filteredData, d => +d[\"Score\"]), d3.max(filteredData, d => +d[\"Score\"])]).interpolator(d3.interpolateRgbBasis([\"#8b0000\",\n    // dark red\n    \"#ff4500\",\n    // orange-red\n    \"#ffd700\",\n    // yellow-orange\n    \"#ffff00\",\n    // yellow\n    \"#9acd32\",\n    // yellow-green\n    \"#00ff00\" // green\n    ]));\n\n    // Create a custom tooltip\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0).style(\"position\", \"absolute\").style(\"background-color\", \"#fff\").style(\"border\", \"1px solid #ccc\").style(\"box-shadow\", \"0 2px 5px rgba(0, 0, 0, 0.1)\").style(\"pointer-events\", \"none\").style(\"font-family\", \"Arial, sans-serif\").style(\"font-size\", \"14px\");\n\n    // Create the bars with tooltips and smooth scrolling\n    const bars = svg.selectAll(\".bar\").data(filteredData, d => d[\"Country or region\"]) // Use key function to track data\n    .join(enter => enter.append(\"rect\").attr(\"class\", \"bar\").attr(\"y\", (d, i) => i * 50 + 50).attr(\"height\", 40).attr(\"fill\", d => colorScale(d[\"Score\"])).attr(\"id\", d => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).attr(\"width\", 0), update => update.attr(\"y\", (d, i) => i * 50 + 50).attr(\"fill\", d => colorScale(d[\"Score\"])), exit => exit.transition().duration(500).attr(\"width\", 0).remove());\n\n    // Add country labels inside each bar\n    const labels = svg.selectAll(\".label\").data(filteredData, d => d[\"Country or region\"]) // Use key function to track data\n    .join(enter => enter.append(\"text\").attr(\"class\", \"label\").attr(\"y\", (d, i) => i * 50 + 75).attr(\"x\", 10).text(d => d[\"Country or region\"]).attr(\"font-size\", \"12px\").attr(\"fill\", \"black\").attr(\"opacity\", 0), update => update.attr(\"y\", (d, i) => i * 50 + 75).text(d => d[\"Country or region\"]), exit => exit.transition().duration(500).attr(\"opacity\", 0).remove());\n\n    // Add score text to the right end of each bar inside the bar\n    const scores = svg.selectAll(\".score\").data(filteredData).join(enter => enter.append(\"text\").attr(\"class\", \"score\").attr(\"x\", d => xScale(d[\"Score\"]) - 5) // Position inside the bar, adjust as needed\n    .attr(\"y\", (d, i) => i * 50 + 75).text(d => d[\"Score\"]).attr(\"font-size\", \"12px\").attr(\"fill\", \"black\").attr(\"text-anchor\", \"end\").attr(\"opacity\", 0), update => update.attr(\"y\", (d, i) => i * 50 + 75).text(d => d[\"Score\"]), exit => exit.transition().duration(500).attr(\"opacity\", 0).remove());\n\n    // Create Intersection Observer\n    const observer = new IntersectionObserver(entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          const bar = d3.select(entry.target);\n          bar.transition().duration(1000).attr(\"width\", d => xScale(d[\"Score\"]));\n          const scoreText = svg.selectAll(\".score\").filter(d => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}` === entry.target.id);\n          scoreText.transition().duration(1000).attr(\"opacity\", 1).attr(\"x\", d => xScale(d[\"Score\"]) - 10); // Adjust padding\n          const labelText = svg.selectAll(\".label\").filter(d => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}` === entry.target.id);\n          labelText.transition().duration(1000).attr(\"opacity\", 1);\n          observer.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.1\n    });\n    bars.each(function () {\n      observer.observe(this);\n    });\n    bars.on(\"mouseover\", function (event, d) {\n      tooltip.transition().duration(200).style(\"opacity\", 0.9);\n      tooltip.html(`<div style=\"color: #333; font-weight: bold; margin-bottom: 10px;\">${d[\"Country or region\"]}</div>\n              <div style=\"color: #666;\"><strong>Happiness Score:</strong> ${d[\"Score\"]}</div>\n              <div style=\"color: #666;\"><strong>GDP per Capita:</strong> ${d[\"GDP per capita\"]}</div>\n              <div style=\"color: #666;\"><strong>Social Support:</strong> ${d[\"Social support\"]}</div>\n              <div style=\"color: #666;\"><strong>Healthy Life Expectancy:</strong> ${d[\"Healthy life expectancy\"]}</div>\n              <div style=\"color: #666;\"><strong>Freedom to Make Life Choices:</strong> ${d[\"Freedom to make life choices\"]}</div>\n              <div style=\"color: #666;\"><strong>Generosity:</strong> ${d[\"Generosity\"]}</div>\n              <div style=\"color: #666;\"><strong>Perceptions of Corruption:</strong> ${d[\"Perceptions of corruption\"]}</div>`).style(\"left\", event.pageX + 10 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", function () {\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    }).on(\"click\", function (event, d) {\n      document.getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n    return () => {\n      tooltip.remove();\n      if (observer) {\n        bars.each(function () {\n          observer.unobserve(this);\n        });\n      }\n    };\n  }, [filteredData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Sort by:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: sortCriteria,\n          onChange: handleSortChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"score\",\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"alphabetical\",\n            children: \"Alphabetical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Search:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchTerm,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 299,\n    columnNumber: 5\n  }, this);\n};\n_s(HappinessChart, \"8w6PSOxOR2OqXw3wv+7/E0CFad4=\");\n_c = HappinessChart;\nexport default HappinessChart;\nvar _c;\n$RefreshReg$(_c, \"HappinessChart\");","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","jsxDEV","_jsxDEV","HappinessChart","data","_s","sortCriteria","setSortCriteria","searchTerm","setSearchTerm","selectedFactor","setSelectedFactor","factorRange","setFactorRange","chartRef","observerRef","handleSortChange","event","target","value","handleSearchChange","toLowerCase","handleFactorChange","handleRangeChange","min","max","split","map","Number","filteredData","filter","d","includes","factorValue","sort","a","b","localeCompare","length","select","current","selectAll","remove","svg","attr","window","innerWidth","style","legend","append","legendData","color","text","legendSpacing","legendText","enter","legendRects","previousX","each","i","currentText","textWidth","node","getBBox","width","currentRect","_","j","legendWidth","xScale","scaleLinear","domain","range","colorScale","scaleSequential","interpolator","interpolateRgbBasis","tooltip","bars","join","replace","update","exit","transition","duration","labels","scores","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","bar","scoreText","id","labelText","unobserve","threshold","observe","on","html","pageX","pageY","document","getElementById","scrollIntoView","behavior","children","className","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","_c","$RefreshReg$"],"sources":["/Users/rahulgudivada/workspace/happiness-index/frontend/src/HappinessChart.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst HappinessChart = ({ data }) => {\n  const [sortCriteria, setSortCriteria] = useState(\"score\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedFactor, setSelectedFactor] = useState(\"\");\n  const [factorRange, setFactorRange] = useState([0, 10]);\n  const chartRef = useRef();\n  const observerRef = useRef(null);\n\n  const handleSortChange = (event) => {\n    setSortCriteria(event.target.value);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n\n  const handleFactorChange = (event) => {\n    setSelectedFactor(event.target.value);\n  };\n\n  const handleRangeChange = (event) => {\n    const [min, max] = event.target.value.split(\",\").map(Number);\n    setFactorRange([min, max]);\n  };\n\n  const filteredData = data\n    .filter((d) => d[\"Country or region\"].toLowerCase().includes(searchTerm))\n    .filter((d) => {\n      if (selectedFactor) {\n        const factorValue = d[selectedFactor];\n        return factorValue >= factorRange[0] && factorValue <= factorRange[1];\n      }\n      return true;\n    })\n    .sort((a, b) => {\n      if (sortCriteria === \"alphabetical\") {\n        return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);\n      } else if (sortCriteria === \"score\") {\n        return b[\"Score\"] - a[\"Score\"];\n      }\n      return 0;\n    });\n\n  useEffect(() => {\n    if (filteredData.length === 0) return;\n\n    // Clear any previous SVG elements\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n\n    // Set up the SVG element and its dimensions\n    const svg = d3\n      .select(chartRef.current)\n      .attr(\"width\", window.innerWidth)\n      .attr(\"height\", filteredData.length * 50 + 150) // Extra space for legend\n      .style(\"overflow\", \"visible\");\n\n    // Add a legend at the top\n    const legend = svg\n      .append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\n        \"transform\",\n        `translate(${(window.innerWidth - 200) / 2 - 150}, 10)`\n      );\n\n    const legendData = [\n      { color: \"#00ff00\", text: \"High Happiness\" },\n      { color: \"#ffff00\", text: \"Medium Happiness\" },\n      { color: \"red\", text: \"Low Happiness\" },\n    ];\n\n    const legendSpacing = 20; // Adjust this value as needed\n\n    const legendText = legend\n      .selectAll(\"text\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .text((d) => d.text)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"black\");\n\n    const legendRects = legend\n      .selectAll(\"rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"width\", 20)\n      .attr(\"height\", 20)\n      .attr(\"fill\", (d) => d.color);\n\n    let previousX = 0;\n\n    legendText.each(function (d, i) {\n      const currentText = d3.select(this);\n      const textWidth = currentText.node().getBBox().width;\n\n      currentText.attr(\"transform\", `translate(${previousX + 30}, 15)`);\n\n      const currentRect = legendRects.filter((_, j) => j === i);\n      currentRect.attr(\"transform\", `translate(${previousX}, 0)`);\n\n      previousX += textWidth + 30 + legendSpacing;\n    });\n\n    // Center the legend horizontally\n    const legendWidth = previousX - legendSpacing;\n    legend.attr(\n      \"transform\",\n      `translate(${(window.innerWidth - 200 - legendWidth) / 2}, 10)`\n    );\n\n    // Set up the scales\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(filteredData, (d) => +d[\"Score\"])])\n      .range([0, window.innerWidth - 200]);\n\n    // Set up the color scale\n    const colorScale = d3\n      .scaleSequential()\n      .domain([\n        d3.min(filteredData, (d) => +d[\"Score\"]),\n        d3.max(filteredData, (d) => +d[\"Score\"]),\n      ])\n      .interpolator(\n        d3.interpolateRgbBasis([\n          \"#8b0000\", // dark red\n          \"#ff4500\", // orange-red\n          \"#ffd700\", // yellow-orange\n          \"#ffff00\", // yellow\n          \"#9acd32\", // yellow-green\n          \"#00ff00\", // green\n        ])\n      );\n\n    // Create a custom tooltip\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0)\n      .style(\"position\", \"absolute\")\n      .style(\"background-color\", \"#fff\")\n      .style(\"border\", \"1px solid #ccc\")\n      .style(\"box-shadow\", \"0 2px 5px rgba(0, 0, 0, 0.1)\")\n      .style(\"pointer-events\", \"none\")\n      .style(\"font-family\", \"Arial, sans-serif\")\n      .style(\"font-size\", \"14px\");\n\n    // Create the bars with tooltips and smooth scrolling\n    const bars = svg\n      .selectAll(\".bar\")\n      .data(filteredData, (d) => d[\"Country or region\"]) // Use key function to track data\n      .join(\n        (enter) =>\n          enter\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"y\", (d, i) => i * 50 + 50)\n            .attr(\"height\", 40)\n            .attr(\"fill\", (d) => colorScale(d[\"Score\"]))\n            .attr(\n              \"id\",\n              (d) => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`\n            )\n            .attr(\"width\", 0),\n        (update) =>\n          update\n            .attr(\"y\", (d, i) => i * 50 + 50)\n            .attr(\"fill\", (d) => colorScale(d[\"Score\"])),\n        (exit) => exit.transition().duration(500).attr(\"width\", 0).remove()\n      );\n\n    // Add country labels inside each bar\n    const labels = svg\n      .selectAll(\".label\")\n      .data(filteredData, (d) => d[\"Country or region\"]) // Use key function to track data\n      .join(\n        (enter) =>\n          enter\n            .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"y\", (d, i) => i * 50 + 75)\n            .attr(\"x\", 10)\n            .text((d) => d[\"Country or region\"])\n            .attr(\"font-size\", \"12px\")\n            .attr(\"fill\", \"black\")\n            .attr(\"opacity\", 0),\n        (update) =>\n          update\n            .attr(\"y\", (d, i) => i * 50 + 75)\n            .text((d) => d[\"Country or region\"]),\n        (exit) => exit.transition().duration(500).attr(\"opacity\", 0).remove()\n      );\n\n    // Add score text to the right end of each bar inside the bar\n    const scores = svg\n      .selectAll(\".score\")\n      .data(filteredData)\n      .join(\n        (enter) =>\n          enter\n            .append(\"text\")\n            .attr(\"class\", \"score\")\n            .attr(\"x\", (d) => xScale(d[\"Score\"]) - 5) // Position inside the bar, adjust as needed\n            .attr(\"y\", (d, i) => i * 50 + 75)\n            .text((d) => d[\"Score\"])\n            .attr(\"font-size\", \"12px\")\n            .attr(\"fill\", \"black\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"opacity\", 0),\n        (update) =>\n          update.attr(\"y\", (d, i) => i * 50 + 75).text((d) => d[\"Score\"]),\n        (exit) => exit.transition().duration(500).attr(\"opacity\", 0).remove()\n      );\n\n    // Create Intersection Observer\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const bar = d3.select(entry.target);\n            bar\n              .transition()\n              .duration(1000)\n              .attr(\"width\", (d) => xScale(d[\"Score\"]));\n            const scoreText = svg\n              .selectAll(\".score\")\n              .filter(\n                (d) =>\n                  `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}` ===\n                  entry.target.id\n              );\n            scoreText\n              .transition()\n              .duration(1000)\n              .attr(\"opacity\", 1)\n              .attr(\"x\", (d) => xScale(d[\"Score\"]) - 10); // Adjust padding\n            const labelText = svg\n              .selectAll(\".label\")\n              .filter(\n                (d) =>\n                  `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}` ===\n                  entry.target.id\n              );\n            labelText.transition().duration(1000).attr(\"opacity\", 1);\n            observer.unobserve(entry.target);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    bars.each(function () {\n      observer.observe(this);\n    });\n\n    bars\n      .on(\"mouseover\", function (event, d) {\n        tooltip.transition().duration(200).style(\"opacity\", 0.9);\n        tooltip\n          .html(\n            `<div style=\"color: #333; font-weight: bold; margin-bottom: 10px;\">${d[\"Country or region\"]}</div>\n              <div style=\"color: #666;\"><strong>Happiness Score:</strong> ${d[\"Score\"]}</div>\n              <div style=\"color: #666;\"><strong>GDP per Capita:</strong> ${d[\"GDP per capita\"]}</div>\n              <div style=\"color: #666;\"><strong>Social Support:</strong> ${d[\"Social support\"]}</div>\n              <div style=\"color: #666;\"><strong>Healthy Life Expectancy:</strong> ${d[\"Healthy life expectancy\"]}</div>\n              <div style=\"color: #666;\"><strong>Freedom to Make Life Choices:</strong> ${d[\"Freedom to make life choices\"]}</div>\n              <div style=\"color: #666;\"><strong>Generosity:</strong> ${d[\"Generosity\"]}</div>\n              <div style=\"color: #666;\"><strong>Perceptions of Corruption:</strong> ${d[\"Perceptions of corruption\"]}</div>`\n          )\n          .style(\"left\", event.pageX + 10 + \"px\")\n          .style(\"top\", event.pageY - 28 + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        tooltip.transition().duration(500).style(\"opacity\", 0);\n      })\n      .on(\"click\", function (event, d) {\n        document\n          .getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n          .scrollIntoView({ behavior: \"smooth\" });\n      });\n\n    return () => {\n      tooltip.remove();\n      if (observer) {\n        bars.each(function () {\n          observer.unobserve(this);\n        });\n      }\n    };\n  }, [filteredData]);\n\n  return (\n    <div>\n      <div className=\"controls\">\n        <label>\n          Sort by:\n          <select value={sortCriteria} onChange={handleSortChange}>\n            <option value=\"score\">Score</option>\n            <option value=\"alphabetical\">Alphabetical</option>\n          </select>\n        </label>\n        <label>\n          Search:\n          <input type=\"text\" value={searchTerm} onChange={handleSearchChange} />\n        </label>\n      </div>\n      <svg ref={chartRef}></svg>\n    </div>\n  );\n};\n\nexport default HappinessChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}