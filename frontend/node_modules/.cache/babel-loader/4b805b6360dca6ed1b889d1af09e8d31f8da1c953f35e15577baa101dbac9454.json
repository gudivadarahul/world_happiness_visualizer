{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import*as d3 from\"d3\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HappinessChart=_ref=>{let{data}=_ref;const[sortCriteria,setSortCriteria]=useState(\"score\");const[searchTerm,setSearchTerm]=useState(\"\");const[selectedFactor,setSelectedFactor]=useState(\"\");const chartRef=useRef();const factorBlurbs={\"GDP per capita\":\"GDP per capita is a measure of a country's economic output per person. Higher economic prosperity is associated with higher levels of happiness.\",\"Social support\":\"Social support refers to the support and assistance people receive from their friends, family, and community. Strong social connections contribute to higher happiness levels.\",\"Healthy life expectancy\":\"Healthy life expectancy is the average number of years a person can expect to live in good health. Longer and healthier lives are linked to increased happiness.\",\"Freedom to make life choices\":\"Freedom to make life choices reflects the level of autonomy and control people have over their lives. Greater freedom is associated with higher happiness levels.\",Generosity:\"Generosity is measured by the proportion of people who donate money to charity. Acts of kindness and giving contribute to both individual and societal happiness.\",\"Perceptions of corruption\":\"Perceptions of corruption indicate the extent to which people believe corruption is widespread in their country. Lower levels of perceived corruption are associated with higher happiness.\"};const handleSearchChange=event=>{setSearchTerm(event.target.value.toLowerCase());};const handleFactorChange=event=>{const factor=event.target.value;setSelectedFactor(factor);if(factor===\"alphabetical\"){setSortCriteria(\"alphabetical\");}else if(factor===\"\"){setSortCriteria(\"score\");}else{setSortCriteria(factor);}};const filteredData=data.filter(d=>d[\"Country or region\"].toLowerCase().includes(searchTerm)).sort((a,b)=>{if(sortCriteria===\"alphabetical\"){return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);}else if(sortCriteria===\"score\"){return b[\"Score\"]-a[\"Score\"];}else{return b[sortCriteria]-a[sortCriteria];}});useEffect(()=>{if(filteredData.length===0)return;// Clear any previous SVG elements\nd3.select(chartRef.current).selectAll(\"*\").remove();// Set up the SVG element and its dimensions\nconst svg=d3.select(chartRef.current).attr(\"width\",window.innerWidth-100).attr(\"height\",filteredData.length*50+50)// Extra space for legend\n.style(\"overflow\",\"visible\");// Add a legend at the top\nconst legend=svg.append(\"g\").attr(\"class\",\"legend\").attr(\"transform\",\"translate(\".concat((window.innerWidth-80)/2-150,\", 30)\"));const legendData=[{color:\"#00ff00\",text:\"High Happiness\"},{color:\"#ffff00\",text:\"Medium Happiness\"},{color:\"red\",text:\"Low Happiness\"}];const legendSpacing=20;// Adjust this value as needed\nconst legendText=legend.selectAll(\"text\").data(legendData).enter().append(\"text\").text(d=>d.text).attr(\"font-size\",\"12px\").attr(\"fill\",\"black\");const legendRects=legend.selectAll(\"rect\").data(legendData).enter().append(\"rect\").attr(\"width\",20).attr(\"height\",20).attr(\"fill\",d=>d.color);let previousX=0;legendText.each(function(d,i){const currentText=d3.select(this);const textWidth=currentText.node().getBBox().width;currentText.attr(\"transform\",\"translate(\".concat(previousX+30,\", 15)\"));const currentRect=legendRects.filter((_,j)=>j===i);currentRect.attr(\"transform\",\"translate(\".concat(previousX,\", 0)\"));previousX+=textWidth+30+legendSpacing;});// Center the legend horizontally\nconst legendWidth=previousX-legendSpacing;legend.attr(\"transform\",\"translate(\".concat((window.innerWidth-200-legendWidth)/2,\", 10)\"));// Set up the scales\nconst xScale=d3.scaleLinear().domain([0,d3.max(filteredData,d=>+d[\"Score\"])]).range([0,window.innerWidth-150]);// Set up the color scale\nconst colorScale=d3.scaleSequential().domain([d3.min(filteredData,d=>+d[\"Score\"]),d3.max(filteredData,d=>+d[\"Score\"])]).interpolator(d3.interpolateRgbBasis([\"#8b0000\",// dark red\n\"#ff4500\",// orange-red\n\"#ffd700\",// yellow-orange\n\"#ffff00\",// yellow\n\"#9acd32\",// yellow-green\n\"#00ff00\"// green\n]));// Create a custom tooltip\nconst tooltip=d3.select(\"body\").append(\"div\").attr(\"class\",\"tooltip\");// Create the bars with tooltips and smooth scrolling\nconst bars=svg.selectAll(\".bar\").data(filteredData,d=>d[\"Country or region\"])// Use key function to track data\n.join(enter=>enter.append(\"rect\").attr(\"class\",\"bar\").attr(\"y\",(d,i)=>i*50+50).attr(\"height\",40).attr(\"fill\",d=>colorScale(d[\"Score\"])).attr(\"id\",d=>\"bar-\".concat(d[\"Country or region\"].replace(/\\s+/g,\"-\"))).attr(\"width\",0),update=>update.attr(\"y\",(d,i)=>i*50+50).attr(\"fill\",d=>colorScale(d[\"Score\"])),exit=>exit.transition().duration(500).attr(\"width\",0).remove());// Add country labels inside each bar\nconst labels=svg.selectAll(\".label\").data(filteredData,d=>d[\"Country or region\"])// Use key function to track data\n.join(enter=>enter.append(\"text\").attr(\"class\",\"label\").attr(\"y\",(d,i)=>i*50+75).attr(\"x\",10).text(d=>d[\"Country or region\"]).attr(\"font-size\",\"12px\").attr(\"fill\",\"black\").attr(\"opacity\",0),update=>update.attr(\"y\",(d,i)=>i*50+75).text(d=>d[\"Country or region\"]),exit=>exit.transition().duration(500).attr(\"opacity\",0).remove());// Add score text to the right end of each bar inside the bar\nconst scores=svg.selectAll(\".score\").data(filteredData).join(enter=>enter.append(\"text\").attr(\"class\",\"score\").attr(\"x\",d=>xScale(d[\"Score\"])-5)// Position inside the bar, adjust as needed\n.attr(\"y\",(d,i)=>i*50+75).text(d=>d[\"Score\"]).attr(\"font-size\",\"12px\").attr(\"fill\",\"black\").attr(\"text-anchor\",\"end\").attr(\"opacity\",0),update=>update.attr(\"y\",(d,i)=>i*50+75).text(d=>d[\"Score\"]),exit=>exit.transition().duration(500).attr(\"opacity\",0).remove());// Create Intersection Observer\nconst observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){const bar=d3.select(entry.target);bar.transition().duration(1000).attr(\"width\",d=>xScale(d[\"Score\"]));const scoreText=svg.selectAll(\".score\").filter(d=>\"bar-\".concat(d[\"Country or region\"].replace(/\\s+/g,\"-\"))===entry.target.id);scoreText.transition().duration(1000).attr(\"opacity\",1).attr(\"x\",d=>xScale(d[\"Score\"])-10);// Adjust padding\nconst labelText=svg.selectAll(\".label\").filter(d=>\"bar-\".concat(d[\"Country or region\"].replace(/\\s+/g,\"-\"))===entry.target.id);labelText.transition().duration(1000).attr(\"opacity\",1);observer.unobserve(entry.target);}});},{threshold:0.1});bars.each(function(){observer.observe(this);});bars.on(\"mouseover\",function(event,d){tooltip.transition().duration(200).style(\"opacity\",0.9);tooltip.html(\"<div class=\\\"tooltip-content\\\">\\n              <div class=\\\"tooltip-title\\\">\".concat(d[\"Country or region\"],\"</div>\\n              <div class=\\\"tooltip-item\\\"><strong>Happiness Score:</strong> \").concat(d[\"Score\"],\"</div>\\n              <div class=\\\"tooltip-item\\\"><strong>GDP per Capita:</strong> \").concat(d[\"GDP per capita\"],\"</div>\\n              <div class=\\\"tooltip-item\\\"><strong>Social Support:</strong> \").concat(d[\"Social support\"],\"</div>\\n              <div class=\\\"tooltip-item\\\"><strong>Healthy Life Expectancy:</strong> \").concat(d[\"Healthy life expectancy\"],\"</div>\\n              <div class=\\\"tooltip-item\\\"><strong>Freedom to Make Life Choices:</strong> \").concat(d[\"Freedom to make life choices\"],\"</div>\\n              <div class=\\\"tooltip-item\\\"><strong>Generosity:</strong> \").concat(d[\"Generosity\"],\"</div>\\n              <div class=\\\"tooltip-item\\\"><strong>Perceptions of Corruption:</strong> \").concat(d[\"Perceptions of corruption\"],\"</div>\\n            </div>\")).style(\"left\",event.pageX+10+\"px\").style(\"top\",event.pageY-28+\"px\");}).on(\"mouseout\",function(){tooltip.transition().duration(500).style(\"opacity\",0);}).on(\"click\",function(event,d){document.getElementById(\"bar-\".concat(d[\"Country or region\"].replace(/\\s+/g,\"-\"))).scrollIntoView({behavior:\"smooth\"});});return()=>{tooltip.remove();if(observer){bars.each(function(){observer.unobserve(this);});}};},[filteredData,selectedFactor]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"controls\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Sort by:\",/*#__PURE__*/_jsxs(\"select\",{value:selectedFactor,onChange:handleFactorChange,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Happiness Score\"}),/*#__PURE__*/_jsx(\"option\",{value:\"alphabetical\",children:\"Alphabetical\"}),/*#__PURE__*/_jsx(\"option\",{value:\"GDP per capita\",children:\"GDP per Capita\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Social support\",children:\"Social Support\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Healthy life expectancy\",children:\"Healthy Life Expectancy\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Freedom to make life choices\",children:\"Freedom to Make Life Choices\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Generosity\",children:\"Generosity\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Perceptions of corruption\",children:\"Perceptions of Corruption\"})]})]}),/*#__PURE__*/_jsxs(\"label\",{children:[\"Search:\",/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchTerm,onChange:handleSearchChange})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"blurb-container\",children:/*#__PURE__*/_jsx(\"p\",{className:\"factor-blurb\",children:selectedFactor?factorBlurbs[selectedFactor]:\"\"})}),/*#__PURE__*/_jsx(\"svg\",{ref:chartRef})]});};export default HappinessChart;","map":{"version":3,"names":["React","useState","useRef","useEffect","d3","jsx","_jsx","jsxs","_jsxs","HappinessChart","_ref","data","sortCriteria","setSortCriteria","searchTerm","setSearchTerm","selectedFactor","setSelectedFactor","chartRef","factorBlurbs","Generosity","handleSearchChange","event","target","value","toLowerCase","handleFactorChange","factor","filteredData","filter","d","includes","sort","a","b","localeCompare","length","select","current","selectAll","remove","svg","attr","window","innerWidth","style","legend","append","concat","legendData","color","text","legendSpacing","legendText","enter","legendRects","previousX","each","i","currentText","textWidth","node","getBBox","width","currentRect","_","j","legendWidth","xScale","scaleLinear","domain","max","range","colorScale","scaleSequential","min","interpolator","interpolateRgbBasis","tooltip","bars","join","replace","update","exit","transition","duration","labels","scores","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","bar","scoreText","id","labelText","unobserve","threshold","observe","on","html","pageX","pageY","document","getElementById","scrollIntoView","behavior","children","className","onChange","type","ref"],"sources":["/Users/rahulgudivada/workspace/happiness-index/frontend/src/HappinessChart.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst HappinessChart = ({ data }) => {\n  const [sortCriteria, setSortCriteria] = useState(\"score\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [selectedFactor, setSelectedFactor] = useState(\"\");\n  const chartRef = useRef();\n\n  const factorBlurbs = {\n    \"GDP per capita\":\n      \"GDP per capita is a measure of a country's economic output per person. Higher economic prosperity is associated with higher levels of happiness.\",\n    \"Social support\":\n      \"Social support refers to the support and assistance people receive from their friends, family, and community. Strong social connections contribute to higher happiness levels.\",\n    \"Healthy life expectancy\":\n      \"Healthy life expectancy is the average number of years a person can expect to live in good health. Longer and healthier lives are linked to increased happiness.\",\n    \"Freedom to make life choices\":\n      \"Freedom to make life choices reflects the level of autonomy and control people have over their lives. Greater freedom is associated with higher happiness levels.\",\n    Generosity:\n      \"Generosity is measured by the proportion of people who donate money to charity. Acts of kindness and giving contribute to both individual and societal happiness.\",\n    \"Perceptions of corruption\":\n      \"Perceptions of corruption indicate the extent to which people believe corruption is widespread in their country. Lower levels of perceived corruption are associated with higher happiness.\",\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n\n  const handleFactorChange = (event) => {\n    const factor = event.target.value;\n    setSelectedFactor(factor);\n    if (factor === \"alphabetical\") {\n      setSortCriteria(\"alphabetical\");\n    } else if (factor === \"\") {\n      setSortCriteria(\"score\");\n    } else {\n      setSortCriteria(factor);\n    }\n  };\n\n  const filteredData = data\n    .filter((d) => d[\"Country or region\"].toLowerCase().includes(searchTerm))\n    .sort((a, b) => {\n      if (sortCriteria === \"alphabetical\") {\n        return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);\n      } else if (sortCriteria === \"score\") {\n        return b[\"Score\"] - a[\"Score\"];\n      } else {\n        return b[sortCriteria] - a[sortCriteria];\n      }\n    });\n\n  useEffect(() => {\n    if (filteredData.length === 0) return;\n\n    // Clear any previous SVG elements\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n\n    // Set up the SVG element and its dimensions\n    const svg = d3\n      .select(chartRef.current)\n      .attr(\"width\", window.innerWidth - 100)\n      .attr(\"height\", filteredData.length * 50 + 50) // Extra space for legend\n      .style(\"overflow\", \"visible\");\n\n    // Add a legend at the top\n    const legend = svg\n      .append(\"g\")\n      .attr(\"class\", \"legend\")\n      .attr(\n        \"transform\",\n        `translate(${(window.innerWidth - 80) / 2 - 150}, 30)`\n      );\n\n    const legendData = [\n      { color: \"#00ff00\", text: \"High Happiness\" },\n      { color: \"#ffff00\", text: \"Medium Happiness\" },\n      { color: \"red\", text: \"Low Happiness\" },\n    ];\n\n    const legendSpacing = 20; // Adjust this value as needed\n\n    const legendText = legend\n      .selectAll(\"text\")\n      .data(legendData)\n      .enter()\n      .append(\"text\")\n      .text((d) => d.text)\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"black\");\n\n    const legendRects = legend\n      .selectAll(\"rect\")\n      .data(legendData)\n      .enter()\n      .append(\"rect\")\n      .attr(\"width\", 20)\n      .attr(\"height\", 20)\n      .attr(\"fill\", (d) => d.color);\n\n    let previousX = 0;\n\n    legendText.each(function (d, i) {\n      const currentText = d3.select(this);\n      const textWidth = currentText.node().getBBox().width;\n\n      currentText.attr(\"transform\", `translate(${previousX + 30}, 15)`);\n\n      const currentRect = legendRects.filter((_, j) => j === i);\n      currentRect.attr(\"transform\", `translate(${previousX}, 0)`);\n\n      previousX += textWidth + 30 + legendSpacing;\n    });\n\n    // Center the legend horizontally\n    const legendWidth = previousX - legendSpacing;\n    legend.attr(\n      \"transform\",\n      `translate(${(window.innerWidth - 200 - legendWidth) / 2}, 10)`\n    );\n\n    // Set up the scales\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(filteredData, (d) => +d[\"Score\"])])\n      .range([0, window.innerWidth - 150]);\n\n    // Set up the color scale\n    const colorScale = d3\n      .scaleSequential()\n      .domain([\n        d3.min(filteredData, (d) => +d[\"Score\"]),\n        d3.max(filteredData, (d) => +d[\"Score\"]),\n      ])\n      .interpolator(\n        d3.interpolateRgbBasis([\n          \"#8b0000\", // dark red\n          \"#ff4500\", // orange-red\n          \"#ffd700\", // yellow-orange\n          \"#ffff00\", // yellow\n          \"#9acd32\", // yellow-green\n          \"#00ff00\", // green\n        ])\n      );\n\n    // Create a custom tooltip\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\");\n\n    // Create the bars with tooltips and smooth scrolling\n    const bars = svg\n      .selectAll(\".bar\")\n      .data(filteredData, (d) => d[\"Country or region\"]) // Use key function to track data\n      .join(\n        (enter) =>\n          enter\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"y\", (d, i) => i * 50 + 50)\n            .attr(\"height\", 40)\n            .attr(\"fill\", (d) => colorScale(d[\"Score\"]))\n            .attr(\n              \"id\",\n              (d) => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`\n            )\n            .attr(\"width\", 0),\n        (update) =>\n          update\n            .attr(\"y\", (d, i) => i * 50 + 50)\n            .attr(\"fill\", (d) => colorScale(d[\"Score\"])),\n        (exit) => exit.transition().duration(500).attr(\"width\", 0).remove()\n      );\n\n    // Add country labels inside each bar\n    const labels = svg\n      .selectAll(\".label\")\n      .data(filteredData, (d) => d[\"Country or region\"]) // Use key function to track data\n      .join(\n        (enter) =>\n          enter\n            .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"y\", (d, i) => i * 50 + 75)\n            .attr(\"x\", 10)\n            .text((d) => d[\"Country or region\"])\n            .attr(\"font-size\", \"12px\")\n            .attr(\"fill\", \"black\")\n            .attr(\"opacity\", 0),\n        (update) =>\n          update\n            .attr(\"y\", (d, i) => i * 50 + 75)\n            .text((d) => d[\"Country or region\"]),\n        (exit) => exit.transition().duration(500).attr(\"opacity\", 0).remove()\n      );\n\n    // Add score text to the right end of each bar inside the bar\n    const scores = svg\n      .selectAll(\".score\")\n      .data(filteredData)\n      .join(\n        (enter) =>\n          enter\n            .append(\"text\")\n            .attr(\"class\", \"score\")\n            .attr(\"x\", (d) => xScale(d[\"Score\"]) - 5) // Position inside the bar, adjust as needed\n            .attr(\"y\", (d, i) => i * 50 + 75)\n            .text((d) => d[\"Score\"])\n            .attr(\"font-size\", \"12px\")\n            .attr(\"fill\", \"black\")\n            .attr(\"text-anchor\", \"end\")\n            .attr(\"opacity\", 0),\n        (update) =>\n          update.attr(\"y\", (d, i) => i * 50 + 75).text((d) => d[\"Score\"]),\n        (exit) => exit.transition().duration(500).attr(\"opacity\", 0).remove()\n      );\n\n    // Create Intersection Observer\n    const observer = new IntersectionObserver(\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            const bar = d3.select(entry.target);\n            bar\n              .transition()\n              .duration(1000)\n              .attr(\"width\", (d) => xScale(d[\"Score\"]));\n            const scoreText = svg\n              .selectAll(\".score\")\n              .filter(\n                (d) =>\n                  `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}` ===\n                  entry.target.id\n              );\n            scoreText\n              .transition()\n              .duration(1000)\n              .attr(\"opacity\", 1)\n              .attr(\"x\", (d) => xScale(d[\"Score\"]) - 10); // Adjust padding\n            const labelText = svg\n              .selectAll(\".label\")\n              .filter(\n                (d) =>\n                  `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}` ===\n                  entry.target.id\n              );\n            labelText.transition().duration(1000).attr(\"opacity\", 1);\n            observer.unobserve(entry.target);\n          }\n        });\n      },\n      { threshold: 0.1 }\n    );\n\n    bars.each(function () {\n      observer.observe(this);\n    });\n\n    bars\n      .on(\"mouseover\", function (event, d) {\n        tooltip.transition().duration(200).style(\"opacity\", 0.9);\n        tooltip\n          .html(\n            `<div class=\"tooltip-content\">\n              <div class=\"tooltip-title\">${d[\"Country or region\"]}</div>\n              <div class=\"tooltip-item\"><strong>Happiness Score:</strong> ${d[\"Score\"]}</div>\n              <div class=\"tooltip-item\"><strong>GDP per Capita:</strong> ${d[\"GDP per capita\"]}</div>\n              <div class=\"tooltip-item\"><strong>Social Support:</strong> ${d[\"Social support\"]}</div>\n              <div class=\"tooltip-item\"><strong>Healthy Life Expectancy:</strong> ${d[\"Healthy life expectancy\"]}</div>\n              <div class=\"tooltip-item\"><strong>Freedom to Make Life Choices:</strong> ${d[\"Freedom to make life choices\"]}</div>\n              <div class=\"tooltip-item\"><strong>Generosity:</strong> ${d[\"Generosity\"]}</div>\n              <div class=\"tooltip-item\"><strong>Perceptions of Corruption:</strong> ${d[\"Perceptions of corruption\"]}</div>\n            </div>`\n          )\n          .style(\"left\", event.pageX + 10 + \"px\")\n          .style(\"top\", event.pageY - 28 + \"px\");\n      })\n      .on(\"mouseout\", function () {\n        tooltip.transition().duration(500).style(\"opacity\", 0);\n      })\n      .on(\"click\", function (event, d) {\n        document\n          .getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n          .scrollIntoView({ behavior: \"smooth\" });\n      });\n\n    return () => {\n      tooltip.remove();\n      if (observer) {\n        bars.each(function () {\n          observer.unobserve(this);\n        });\n      }\n    };\n  }, [filteredData, selectedFactor]);\n\n  return (\n    <div>\n      <div className=\"controls\">\n        <label>\n          Sort by:\n          <select value={selectedFactor} onChange={handleFactorChange}>\n            <option value=\"\">Happiness Score</option>\n            <option value=\"alphabetical\">Alphabetical</option>\n            <option value=\"GDP per capita\">GDP per Capita</option>\n            <option value=\"Social support\">Social Support</option>\n            <option value=\"Healthy life expectancy\">\n              Healthy Life Expectancy\n            </option>\n            <option value=\"Freedom to make life choices\">\n              Freedom to Make Life Choices\n            </option>\n            <option value=\"Generosity\">Generosity</option>\n            <option value=\"Perceptions of corruption\">\n              Perceptions of Corruption\n            </option>\n          </select>\n        </label>\n        <label>\n          Search:\n          <input type=\"text\" value={searchTerm} onChange={handleSearchChange} />\n        </label>\n      </div>\n      <div className=\"blurb-container\">\n        <p className=\"factor-blurb\">\n          {selectedFactor ? factorBlurbs[selectedFactor] : \"\"}\n        </p>\n      </div>\n      <svg ref={chartRef}></svg>\n    </div>\n  );\n};\n\nexport default HappinessChart;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,MAAO,GAAK,CAAAC,EAAE,KAAM,IAAI,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAc,IAAb,CAAEC,IAAK,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAACE,YAAY,CAAEC,eAAe,CAAC,CAAGZ,QAAQ,CAAC,OAAO,CAAC,CACzD,KAAM,CAACa,UAAU,CAAEC,aAAa,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAACe,cAAc,CAAEC,iBAAiB,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAAAiB,QAAQ,CAAGhB,MAAM,CAAC,CAAC,CAEzB,KAAM,CAAAiB,YAAY,CAAG,CACnB,gBAAgB,CACd,kJAAkJ,CACpJ,gBAAgB,CACd,gLAAgL,CAClL,yBAAyB,CACvB,kKAAkK,CACpK,8BAA8B,CAC5B,mKAAmK,CACrKC,UAAU,CACR,mKAAmK,CACrK,2BAA2B,CACzB,6LACJ,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIC,KAAK,EAAK,CACpCP,aAAa,CAACO,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC,CACjD,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAIJ,KAAK,EAAK,CACpC,KAAM,CAAAK,MAAM,CAAGL,KAAK,CAACC,MAAM,CAACC,KAAK,CACjCP,iBAAiB,CAACU,MAAM,CAAC,CACzB,GAAIA,MAAM,GAAK,cAAc,CAAE,CAC7Bd,eAAe,CAAC,cAAc,CAAC,CACjC,CAAC,IAAM,IAAIc,MAAM,GAAK,EAAE,CAAE,CACxBd,eAAe,CAAC,OAAO,CAAC,CAC1B,CAAC,IAAM,CACLA,eAAe,CAACc,MAAM,CAAC,CACzB,CACF,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGjB,IAAI,CACtBkB,MAAM,CAAEC,CAAC,EAAKA,CAAC,CAAC,mBAAmB,CAAC,CAACL,WAAW,CAAC,CAAC,CAACM,QAAQ,CAACjB,UAAU,CAAC,CAAC,CACxEkB,IAAI,CAAC,CAACC,CAAC,CAAEC,CAAC,GAAK,CACd,GAAItB,YAAY,GAAK,cAAc,CAAE,CACnC,MAAO,CAAAqB,CAAC,CAAC,mBAAmB,CAAC,CAACE,aAAa,CAACD,CAAC,CAAC,mBAAmB,CAAC,CAAC,CACrE,CAAC,IAAM,IAAItB,YAAY,GAAK,OAAO,CAAE,CACnC,MAAO,CAAAsB,CAAC,CAAC,OAAO,CAAC,CAAGD,CAAC,CAAC,OAAO,CAAC,CAChC,CAAC,IAAM,CACL,MAAO,CAAAC,CAAC,CAACtB,YAAY,CAAC,CAAGqB,CAAC,CAACrB,YAAY,CAAC,CAC1C,CACF,CAAC,CAAC,CAEJT,SAAS,CAAC,IAAM,CACd,GAAIyB,YAAY,CAACQ,MAAM,GAAK,CAAC,CAAE,OAE/B;AACAhC,EAAE,CAACiC,MAAM,CAACnB,QAAQ,CAACoB,OAAO,CAAC,CAACC,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC,CAEnD;AACA,KAAM,CAAAC,GAAG,CAAGrC,EAAE,CACXiC,MAAM,CAACnB,QAAQ,CAACoB,OAAO,CAAC,CACxBI,IAAI,CAAC,OAAO,CAAEC,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CACtCF,IAAI,CAAC,QAAQ,CAAEd,YAAY,CAACQ,MAAM,CAAG,EAAE,CAAG,EAAE,CAAE;AAAA,CAC9CS,KAAK,CAAC,UAAU,CAAE,SAAS,CAAC,CAE/B;AACA,KAAM,CAAAC,MAAM,CAAGL,GAAG,CACfM,MAAM,CAAC,GAAG,CAAC,CACXL,IAAI,CAAC,OAAO,CAAE,QAAQ,CAAC,CACvBA,IAAI,CACH,WAAW,cAAAM,MAAA,CACE,CAACL,MAAM,CAACC,UAAU,CAAG,EAAE,EAAI,CAAC,CAAG,GAAG,SACjD,CAAC,CAEH,KAAM,CAAAK,UAAU,CAAG,CACjB,CAAEC,KAAK,CAAE,SAAS,CAAEC,IAAI,CAAE,gBAAiB,CAAC,CAC5C,CAAED,KAAK,CAAE,SAAS,CAAEC,IAAI,CAAE,kBAAmB,CAAC,CAC9C,CAAED,KAAK,CAAE,KAAK,CAAEC,IAAI,CAAE,eAAgB,CAAC,CACxC,CAED,KAAM,CAAAC,aAAa,CAAG,EAAE,CAAE;AAE1B,KAAM,CAAAC,UAAU,CAAGP,MAAM,CACtBP,SAAS,CAAC,MAAM,CAAC,CACjB5B,IAAI,CAACsC,UAAU,CAAC,CAChBK,KAAK,CAAC,CAAC,CACPP,MAAM,CAAC,MAAM,CAAC,CACdI,IAAI,CAAErB,CAAC,EAAKA,CAAC,CAACqB,IAAI,CAAC,CACnBT,IAAI,CAAC,WAAW,CAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,CAAE,OAAO,CAAC,CAExB,KAAM,CAAAa,WAAW,CAAGT,MAAM,CACvBP,SAAS,CAAC,MAAM,CAAC,CACjB5B,IAAI,CAACsC,UAAU,CAAC,CAChBK,KAAK,CAAC,CAAC,CACPP,MAAM,CAAC,MAAM,CAAC,CACdL,IAAI,CAAC,OAAO,CAAE,EAAE,CAAC,CACjBA,IAAI,CAAC,QAAQ,CAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,CAAGZ,CAAC,EAAKA,CAAC,CAACoB,KAAK,CAAC,CAE/B,GAAI,CAAAM,SAAS,CAAG,CAAC,CAEjBH,UAAU,CAACI,IAAI,CAAC,SAAU3B,CAAC,CAAE4B,CAAC,CAAE,CAC9B,KAAM,CAAAC,WAAW,CAAGvD,EAAE,CAACiC,MAAM,CAAC,IAAI,CAAC,CACnC,KAAM,CAAAuB,SAAS,CAAGD,WAAW,CAACE,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAACC,KAAK,CAEpDJ,WAAW,CAACjB,IAAI,CAAC,WAAW,cAAAM,MAAA,CAAeQ,SAAS,CAAG,EAAE,SAAO,CAAC,CAEjE,KAAM,CAAAQ,WAAW,CAAGT,WAAW,CAAC1B,MAAM,CAAC,CAACoC,CAAC,CAAEC,CAAC,GAAKA,CAAC,GAAKR,CAAC,CAAC,CACzDM,WAAW,CAACtB,IAAI,CAAC,WAAW,cAAAM,MAAA,CAAeQ,SAAS,QAAM,CAAC,CAE3DA,SAAS,EAAII,SAAS,CAAG,EAAE,CAAGR,aAAa,CAC7C,CAAC,CAAC,CAEF;AACA,KAAM,CAAAe,WAAW,CAAGX,SAAS,CAAGJ,aAAa,CAC7CN,MAAM,CAACJ,IAAI,CACT,WAAW,cAAAM,MAAA,CACE,CAACL,MAAM,CAACC,UAAU,CAAG,GAAG,CAAGuB,WAAW,EAAI,CAAC,SAC1D,CAAC,CAED;AACA,KAAM,CAAAC,MAAM,CAAGhE,EAAE,CACdiE,WAAW,CAAC,CAAC,CACbC,MAAM,CAAC,CAAC,CAAC,CAAElE,EAAE,CAACmE,GAAG,CAAC3C,YAAY,CAAGE,CAAC,EAAK,CAACA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CACrD0C,KAAK,CAAC,CAAC,CAAC,CAAE7B,MAAM,CAACC,UAAU,CAAG,GAAG,CAAC,CAAC,CAEtC;AACA,KAAM,CAAA6B,UAAU,CAAGrE,EAAE,CAClBsE,eAAe,CAAC,CAAC,CACjBJ,MAAM,CAAC,CACNlE,EAAE,CAACuE,GAAG,CAAC/C,YAAY,CAAGE,CAAC,EAAK,CAACA,CAAC,CAAC,OAAO,CAAC,CAAC,CACxC1B,EAAE,CAACmE,GAAG,CAAC3C,YAAY,CAAGE,CAAC,EAAK,CAACA,CAAC,CAAC,OAAO,CAAC,CAAC,CACzC,CAAC,CACD8C,YAAY,CACXxE,EAAE,CAACyE,mBAAmB,CAAC,CACrB,SAAS,CAAE;AACX,SAAS,CAAE;AACX,SAAS,CAAE;AACX,SAAS,CAAE;AACX,SAAS,CAAE;AACX,SAAW;AAAA,CACZ,CACH,CAAC,CAEH;AACA,KAAM,CAAAC,OAAO,CAAG1E,EAAE,CAACiC,MAAM,CAAC,MAAM,CAAC,CAACU,MAAM,CAAC,KAAK,CAAC,CAACL,IAAI,CAAC,OAAO,CAAE,SAAS,CAAC,CAExE;AACA,KAAM,CAAAqC,IAAI,CAAGtC,GAAG,CACbF,SAAS,CAAC,MAAM,CAAC,CACjB5B,IAAI,CAACiB,YAAY,CAAGE,CAAC,EAAKA,CAAC,CAAC,mBAAmB,CAAC,CAAE;AAAA,CAClDkD,IAAI,CACF1B,KAAK,EACJA,KAAK,CACFP,MAAM,CAAC,MAAM,CAAC,CACdL,IAAI,CAAC,OAAO,CAAE,KAAK,CAAC,CACpBA,IAAI,CAAC,GAAG,CAAE,CAACZ,CAAC,CAAE4B,CAAC,GAAKA,CAAC,CAAG,EAAE,CAAG,EAAE,CAAC,CAChChB,IAAI,CAAC,QAAQ,CAAE,EAAE,CAAC,CAClBA,IAAI,CAAC,MAAM,CAAGZ,CAAC,EAAK2C,UAAU,CAAC3C,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAC3CY,IAAI,CACH,IAAI,CACHZ,CAAC,SAAAkB,MAAA,CAAYlB,CAAC,CAAC,mBAAmB,CAAC,CAACmD,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAC3D,CAAC,CACAvC,IAAI,CAAC,OAAO,CAAE,CAAC,CAAC,CACpBwC,MAAM,EACLA,MAAM,CACHxC,IAAI,CAAC,GAAG,CAAE,CAACZ,CAAC,CAAE4B,CAAC,GAAKA,CAAC,CAAG,EAAE,CAAG,EAAE,CAAC,CAChChB,IAAI,CAAC,MAAM,CAAGZ,CAAC,EAAK2C,UAAU,CAAC3C,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAC/CqD,IAAI,EAAKA,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC3C,IAAI,CAAC,OAAO,CAAE,CAAC,CAAC,CAACF,MAAM,CAAC,CACpE,CAAC,CAEH;AACA,KAAM,CAAA8C,MAAM,CAAG7C,GAAG,CACfF,SAAS,CAAC,QAAQ,CAAC,CACnB5B,IAAI,CAACiB,YAAY,CAAGE,CAAC,EAAKA,CAAC,CAAC,mBAAmB,CAAC,CAAE;AAAA,CAClDkD,IAAI,CACF1B,KAAK,EACJA,KAAK,CACFP,MAAM,CAAC,MAAM,CAAC,CACdL,IAAI,CAAC,OAAO,CAAE,OAAO,CAAC,CACtBA,IAAI,CAAC,GAAG,CAAE,CAACZ,CAAC,CAAE4B,CAAC,GAAKA,CAAC,CAAG,EAAE,CAAG,EAAE,CAAC,CAChChB,IAAI,CAAC,GAAG,CAAE,EAAE,CAAC,CACbS,IAAI,CAAErB,CAAC,EAAKA,CAAC,CAAC,mBAAmB,CAAC,CAAC,CACnCY,IAAI,CAAC,WAAW,CAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,CAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CACtBwC,MAAM,EACLA,MAAM,CACHxC,IAAI,CAAC,GAAG,CAAE,CAACZ,CAAC,CAAE4B,CAAC,GAAKA,CAAC,CAAG,EAAE,CAAG,EAAE,CAAC,CAChCP,IAAI,CAAErB,CAAC,EAAKA,CAAC,CAAC,mBAAmB,CAAC,CAAC,CACvCqD,IAAI,EAAKA,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC3C,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CAACF,MAAM,CAAC,CACtE,CAAC,CAEH;AACA,KAAM,CAAA+C,MAAM,CAAG9C,GAAG,CACfF,SAAS,CAAC,QAAQ,CAAC,CACnB5B,IAAI,CAACiB,YAAY,CAAC,CAClBoD,IAAI,CACF1B,KAAK,EACJA,KAAK,CACFP,MAAM,CAAC,MAAM,CAAC,CACdL,IAAI,CAAC,OAAO,CAAE,OAAO,CAAC,CACtBA,IAAI,CAAC,GAAG,CAAGZ,CAAC,EAAKsC,MAAM,CAACtC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAG,CAAC,CAAE;AAAA,CACzCY,IAAI,CAAC,GAAG,CAAE,CAACZ,CAAC,CAAE4B,CAAC,GAAKA,CAAC,CAAG,EAAE,CAAG,EAAE,CAAC,CAChCP,IAAI,CAAErB,CAAC,EAAKA,CAAC,CAAC,OAAO,CAAC,CAAC,CACvBY,IAAI,CAAC,WAAW,CAAE,MAAM,CAAC,CACzBA,IAAI,CAAC,MAAM,CAAE,OAAO,CAAC,CACrBA,IAAI,CAAC,aAAa,CAAE,KAAK,CAAC,CAC1BA,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CACtBwC,MAAM,EACLA,MAAM,CAACxC,IAAI,CAAC,GAAG,CAAE,CAACZ,CAAC,CAAE4B,CAAC,GAAKA,CAAC,CAAG,EAAE,CAAG,EAAE,CAAC,CAACP,IAAI,CAAErB,CAAC,EAAKA,CAAC,CAAC,OAAO,CAAC,CAAC,CAChEqD,IAAI,EAAKA,IAAI,CAACC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAAC3C,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CAACF,MAAM,CAAC,CACtE,CAAC,CAEH;AACA,KAAM,CAAAgD,QAAQ,CAAG,GAAI,CAAAC,oBAAoB,CACtCC,OAAO,EAAK,CACXA,OAAO,CAACC,OAAO,CAAEC,KAAK,EAAK,CACzB,GAAIA,KAAK,CAACC,cAAc,CAAE,CACxB,KAAM,CAAAC,GAAG,CAAG1F,EAAE,CAACiC,MAAM,CAACuD,KAAK,CAACrE,MAAM,CAAC,CACnCuE,GAAG,CACAV,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACd3C,IAAI,CAAC,OAAO,CAAGZ,CAAC,EAAKsC,MAAM,CAACtC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAC3C,KAAM,CAAAiE,SAAS,CAAGtD,GAAG,CAClBF,SAAS,CAAC,QAAQ,CAAC,CACnBV,MAAM,CACJC,CAAC,EACA,OAAAkB,MAAA,CAAOlB,CAAC,CAAC,mBAAmB,CAAC,CAACmD,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,IAClDW,KAAK,CAACrE,MAAM,CAACyE,EACjB,CAAC,CACHD,SAAS,CACNX,UAAU,CAAC,CAAC,CACZC,QAAQ,CAAC,IAAI,CAAC,CACd3C,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CAClBA,IAAI,CAAC,GAAG,CAAGZ,CAAC,EAAKsC,MAAM,CAACtC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAG,EAAE,CAAC,CAAE;AAC9C,KAAM,CAAAmE,SAAS,CAAGxD,GAAG,CAClBF,SAAS,CAAC,QAAQ,CAAC,CACnBV,MAAM,CACJC,CAAC,EACA,OAAAkB,MAAA,CAAOlB,CAAC,CAAC,mBAAmB,CAAC,CAACmD,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,IAClDW,KAAK,CAACrE,MAAM,CAACyE,EACjB,CAAC,CACHC,SAAS,CAACb,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAAC,CAAC3C,IAAI,CAAC,SAAS,CAAE,CAAC,CAAC,CACxD8C,QAAQ,CAACU,SAAS,CAACN,KAAK,CAACrE,MAAM,CAAC,CAClC,CACF,CAAC,CAAC,CACJ,CAAC,CACD,CAAE4E,SAAS,CAAE,GAAI,CACnB,CAAC,CAEDpB,IAAI,CAACtB,IAAI,CAAC,UAAY,CACpB+B,QAAQ,CAACY,OAAO,CAAC,IAAI,CAAC,CACxB,CAAC,CAAC,CAEFrB,IAAI,CACDsB,EAAE,CAAC,WAAW,CAAE,SAAU/E,KAAK,CAAEQ,CAAC,CAAE,CACnCgD,OAAO,CAACM,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACxC,KAAK,CAAC,SAAS,CAAE,GAAG,CAAC,CACxDiC,OAAO,CACJwB,IAAI,gFAAAtD,MAAA,CAE4BlB,CAAC,CAAC,mBAAmB,CAAC,yFAAAkB,MAAA,CACWlB,CAAC,CAAC,OAAO,CAAC,wFAAAkB,MAAA,CACXlB,CAAC,CAAC,gBAAgB,CAAC,wFAAAkB,MAAA,CACnBlB,CAAC,CAAC,gBAAgB,CAAC,iGAAAkB,MAAA,CACVlB,CAAC,CAAC,yBAAyB,CAAC,sGAAAkB,MAAA,CACvBlB,CAAC,CAAC,8BAA8B,CAAC,oFAAAkB,MAAA,CACnDlB,CAAC,CAAC,YAAY,CAAC,mGAAAkB,MAAA,CACAlB,CAAC,CAAC,2BAA2B,CAAC,8BAE1G,CAAC,CACAe,KAAK,CAAC,MAAM,CAAEvB,KAAK,CAACiF,KAAK,CAAG,EAAE,CAAG,IAAI,CAAC,CACtC1D,KAAK,CAAC,KAAK,CAAEvB,KAAK,CAACkF,KAAK,CAAG,EAAE,CAAG,IAAI,CAAC,CAC1C,CAAC,CAAC,CACDH,EAAE,CAAC,UAAU,CAAE,UAAY,CAC1BvB,OAAO,CAACM,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,GAAG,CAAC,CAACxC,KAAK,CAAC,SAAS,CAAE,CAAC,CAAC,CACxD,CAAC,CAAC,CACDwD,EAAE,CAAC,OAAO,CAAE,SAAU/E,KAAK,CAAEQ,CAAC,CAAE,CAC/B2E,QAAQ,CACLC,cAAc,QAAA1D,MAAA,CAAQlB,CAAC,CAAC,mBAAmB,CAAC,CAACmD,OAAO,CAAC,MAAM,CAAE,GAAG,CAAC,CAAE,CAAC,CACpE0B,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAS,CAAC,CAAC,CAC3C,CAAC,CAAC,CAEJ,MAAO,IAAM,CACX9B,OAAO,CAACtC,MAAM,CAAC,CAAC,CAChB,GAAIgD,QAAQ,CAAE,CACZT,IAAI,CAACtB,IAAI,CAAC,UAAY,CACpB+B,QAAQ,CAACU,SAAS,CAAC,IAAI,CAAC,CAC1B,CAAC,CAAC,CACJ,CACF,CAAC,CACH,CAAC,CAAE,CAACtE,YAAY,CAAEZ,cAAc,CAAC,CAAC,CAElC,mBACER,KAAA,QAAAqG,QAAA,eACErG,KAAA,QAAKsG,SAAS,CAAC,UAAU,CAAAD,QAAA,eACvBrG,KAAA,UAAAqG,QAAA,EAAO,UAEL,cAAArG,KAAA,WAAQgB,KAAK,CAAER,cAAe,CAAC+F,QAAQ,CAAErF,kBAAmB,CAAAmF,QAAA,eAC1DvG,IAAA,WAAQkB,KAAK,CAAC,EAAE,CAAAqF,QAAA,CAAC,iBAAe,CAAQ,CAAC,cACzCvG,IAAA,WAAQkB,KAAK,CAAC,cAAc,CAAAqF,QAAA,CAAC,cAAY,CAAQ,CAAC,cAClDvG,IAAA,WAAQkB,KAAK,CAAC,gBAAgB,CAAAqF,QAAA,CAAC,gBAAc,CAAQ,CAAC,cACtDvG,IAAA,WAAQkB,KAAK,CAAC,gBAAgB,CAAAqF,QAAA,CAAC,gBAAc,CAAQ,CAAC,cACtDvG,IAAA,WAAQkB,KAAK,CAAC,yBAAyB,CAAAqF,QAAA,CAAC,yBAExC,CAAQ,CAAC,cACTvG,IAAA,WAAQkB,KAAK,CAAC,8BAA8B,CAAAqF,QAAA,CAAC,8BAE7C,CAAQ,CAAC,cACTvG,IAAA,WAAQkB,KAAK,CAAC,YAAY,CAAAqF,QAAA,CAAC,YAAU,CAAQ,CAAC,cAC9CvG,IAAA,WAAQkB,KAAK,CAAC,2BAA2B,CAAAqF,QAAA,CAAC,2BAE1C,CAAQ,CAAC,EACH,CAAC,EACJ,CAAC,cACRrG,KAAA,UAAAqG,QAAA,EAAO,SAEL,cAAAvG,IAAA,UAAO0G,IAAI,CAAC,MAAM,CAACxF,KAAK,CAAEV,UAAW,CAACiG,QAAQ,CAAE1F,kBAAmB,CAAE,CAAC,EACjE,CAAC,EACL,CAAC,cACNf,IAAA,QAAKwG,SAAS,CAAC,iBAAiB,CAAAD,QAAA,cAC9BvG,IAAA,MAAGwG,SAAS,CAAC,cAAc,CAAAD,QAAA,CACxB7F,cAAc,CAAGG,YAAY,CAACH,cAAc,CAAC,CAAG,EAAE,CAClD,CAAC,CACD,CAAC,cACNV,IAAA,QAAK2G,GAAG,CAAE/F,QAAS,CAAM,CAAC,EACvB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAT,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}