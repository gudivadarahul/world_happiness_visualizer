{"ast":null,"code":"var _jsxFileName = \"/Users/rahulgudivada/workspace/happiness-index/frontend/src/HappinessChart.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HappinessChart = ({\n  data\n}) => {\n  _s();\n  const [sortCriteria, setSortCriteria] = useState(\"score\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const chartRef = useRef();\n  const handleSortChange = event => {\n    setSortCriteria(event.target.value);\n  };\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n  const filteredData = data.filter(d => d[\"Country or region\"].toLowerCase().includes(searchTerm)).sort((a, b) => {\n    if (sortCriteria === \"alphabetical\") {\n      return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);\n    } else if (sortCriteria === \"score\") {\n      return b[\"Score\"] - a[\"Score\"];\n    }\n    return 0;\n  });\n  useEffect(() => {\n    if (data.length === 0) return;\n\n    // Clear any previous SVG elements\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n\n    // Set up the SVG element and its dimensions\n    const svg = d3.select(chartRef.current).attr(\"width\", window.innerWidth).attr(\"height\", data.length * 50).style(\"overflow\", \"visible\");\n\n    // Set up the scales\n    const xScale = d3.scaleLinear().domain([0, d3.max(data, d => +d[\"Score\"])]).range([0, window.innerWidth - 200]);\n\n    // Set up the color scale\n    const colorScale = d3.scaleSequential().domain([d3.min(data, d => +d[\"Score\"]), d3.max(data, d => +d[\"Score\"])]).interpolator(d3.interpolateRgbBasis([\"#8b0000\",\n    // dark red\n    \"#ff4500\",\n    // orange-red\n    \"#ffd700\",\n    // yellow-orange\n    \"#ffff00\",\n    // yellow\n    \"#9acd32\",\n    // yellow-green\n    \"#00ff00\" // green\n    ]));\n    // Create a custom tooltip\n    const tooltip = d3.select(\"body\").append(\"div\").attr(\"class\", \"tooltip\").style(\"opacity\", 0);\n\n    // Create the bars with tooltips\n    svg.selectAll(\".bar\").data(data).enter().append(\"rect\").attr(\"class\", \"bar\").attr(\"y\", (d, i) => i * 50).attr(\"width\", 0).attr(\"height\", 40).attr(\"fill\", d => colorScale(d[\"Score\"])).attr(\"id\", d => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).on(\"mouseover\", function (event, d) {\n      tooltip.transition().duration(200).style(\"opacity\", 0.9);\n      tooltip.html(\"<strong>Country:</strong> <span style='color:red'>\" + d[\"Country or region\"] + \"</span><br>\" + \"<strong>Score:</strong> <span style='color:red'>\" + d[\"Score\"] + \"</span><br>\").style(\"left\", event.pageX + 10 + \"px\").style(\"top\", event.pageY - 28 + \"px\");\n    }).on(\"mouseout\", function (d) {\n      tooltip.transition().duration(500).style(\"opacity\", 0);\n    }).on(\"click\", function (event, d) {\n      document.getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).scrollIntoView({\n        behavior: \"smooth\"\n      });\n    }).transition().duration(1000).attr(\"width\", d => xScale(d[\"Score\"])).delay((d, i) => i * 50);\n\n    // Create country labels\n    svg.selectAll(\".label\").data(data).enter().append(\"text\").attr(\"class\", \"label\").attr(\"y\", (d, i) => i * 50 + 25).attr(\"x\", 10).text(d => d[\"Country or region\"]).attr(\"font-size\", \"12px\").attr(\"fill\", \"black\").attr(\"id\", d => `label-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).on(\"click\", function (event, d) {\n      document.getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`).scrollIntoView({\n        behavior: \"smooth\"\n      });\n    });\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 10\n  }, this);\n};\n_s(HappinessChart, \"DzCWsm0oXTQpu4uj8Wi/ru6OK94=\");\n_c = HappinessChart;\nexport default HappinessChart;\nvar _c;\n$RefreshReg$(_c, \"HappinessChart\");","map":{"version":3,"names":["React","useRef","useEffect","d3","jsxDEV","_jsxDEV","HappinessChart","data","_s","sortCriteria","setSortCriteria","useState","searchTerm","setSearchTerm","chartRef","handleSortChange","event","target","value","handleSearchChange","toLowerCase","filteredData","filter","d","includes","sort","a","b","localeCompare","length","select","current","selectAll","remove","svg","attr","window","innerWidth","style","xScale","scaleLinear","domain","max","range","colorScale","scaleSequential","min","interpolator","interpolateRgbBasis","tooltip","append","enter","i","replace","on","transition","duration","html","pageX","pageY","document","getElementById","scrollIntoView","behavior","delay","text","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahulgudivada/workspace/happiness-index/frontend/src/HappinessChart.js"],"sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst HappinessChart = ({ data }) => {\n  const [sortCriteria, setSortCriteria] = useState(\"score\");\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const chartRef = useRef();\n\n  const handleSortChange = (event) => {\n    setSortCriteria(event.target.value);\n  };\n\n  const handleSearchChange = (event) => {\n    setSearchTerm(event.target.value.toLowerCase());\n  };\n\n  const filteredData = data\n    .filter((d) => d[\"Country or region\"].toLowerCase().includes(searchTerm))\n    .sort((a, b) => {\n      if (sortCriteria === \"alphabetical\") {\n        return a[\"Country or region\"].localeCompare(b[\"Country or region\"]);\n      } else if (sortCriteria === \"score\") {\n        return b[\"Score\"] - a[\"Score\"];\n      }\n      return 0;\n    });\n\n  useEffect(() => {\n    if (data.length === 0) return;\n\n    // Clear any previous SVG elements\n    d3.select(chartRef.current).selectAll(\"*\").remove();\n\n    // Set up the SVG element and its dimensions\n    const svg = d3\n      .select(chartRef.current)\n      .attr(\"width\", window.innerWidth)\n      .attr(\"height\", data.length * 50)\n      .style(\"overflow\", \"visible\");\n\n    // Set up the scales\n    const xScale = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, (d) => +d[\"Score\"])])\n      .range([0, window.innerWidth - 200]);\n\n    // Set up the color scale\n    const colorScale = d3\n      .scaleSequential()\n      .domain([\n        d3.min(data, (d) => +d[\"Score\"]),\n        d3.max(data, (d) => +d[\"Score\"]),\n      ])\n      .interpolator(\n        d3.interpolateRgbBasis([\n          \"#8b0000\", // dark red\n          \"#ff4500\", // orange-red\n          \"#ffd700\", // yellow-orange\n          \"#ffff00\", // yellow\n          \"#9acd32\", // yellow-green\n          \"#00ff00\", // green\n        ])\n      );\n    // Create a custom tooltip\n    const tooltip = d3\n      .select(\"body\")\n      .append(\"div\")\n      .attr(\"class\", \"tooltip\")\n      .style(\"opacity\", 0);\n\n    // Create the bars with tooltips\n    svg\n      .selectAll(\".bar\")\n      .data(data)\n      .enter()\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", (d, i) => i * 50)\n      .attr(\"width\", 0)\n      .attr(\"height\", 40)\n      .attr(\"fill\", (d) => colorScale(d[\"Score\"]))\n      .attr(\"id\", (d) => `bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n      .on(\"mouseover\", function (event, d) {\n        tooltip.transition().duration(200).style(\"opacity\", 0.9);\n        tooltip\n          .html(\n            \"<strong>Country:</strong> <span style='color:red'>\" +\n              d[\"Country or region\"] +\n              \"</span><br>\" +\n              \"<strong>Score:</strong> <span style='color:red'>\" +\n              d[\"Score\"] +\n              \"</span><br>\"\n          )\n          .style(\"left\", event.pageX + 10 + \"px\")\n          .style(\"top\", event.pageY - 28 + \"px\");\n      })\n      .on(\"mouseout\", function (d) {\n        tooltip.transition().duration(500).style(\"opacity\", 0);\n      })\n      .on(\"click\", function (event, d) {\n        document\n          .getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n          .scrollIntoView({ behavior: \"smooth\" });\n      })\n      .transition()\n      .duration(1000)\n      .attr(\"width\", (d) => xScale(d[\"Score\"]))\n      .delay((d, i) => i * 50);\n\n    // Create country labels\n    svg\n      .selectAll(\".label\")\n      .data(data)\n      .enter()\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      .attr(\"y\", (d, i) => i * 50 + 25)\n      .attr(\"x\", 10)\n      .text((d) => d[\"Country or region\"])\n      .attr(\"font-size\", \"12px\")\n      .attr(\"fill\", \"black\")\n      .attr(\"id\", (d) => `label-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n      .on(\"click\", function (event, d) {\n        document\n          .getElementById(`bar-${d[\"Country or region\"].replace(/\\s+/g, \"-\")}`)\n          .scrollIntoView({ behavior: \"smooth\" });\n      });\n  }, [data]);\n\n  return <svg ref={chartRef}></svg>;\n};\n\nexport default HappinessChart;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}